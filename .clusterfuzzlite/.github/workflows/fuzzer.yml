name: CIFuzz
 push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:


permissions:
  contents: read

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        
        python-version: "3.10"
    - name: Install dependencies
      run: |
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
        
    - name: Build and push docker image
      uses: mr-smithers-excellent/docker-build-push@v4
      with:
        image: khushi2/oss-fuzz
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
  
  
  Fuzzing:
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
            sanitizer: [address, undefined, memory]
    steps:
    - name: Build Fuzzers (${{ matrix.sanitizer }})
      id: build
      uses: google/oss-fuzz/infra/cifuzz/actions/build_fuzzers@master
      with:
        oss-fuzz-project-name: 'Dvpwa'
        language: python
        dry-run: false
        sanitizer: ${{ matrix.sanitizer }}
        
    - name: Run Fuzzers (${{ matrix.sanitizer }})
      uses: google/oss-fuzz/infra/cifuzz/actions/run_fuzzers@master
      with:
        oss-fuzz-project-name: 'Dvpwa'
        language: python
        fuzz-seconds: 600
        dry-run: false
        sanitizer: ${{ matrix.sanitizer }}
    - name: Upload Crash
      uses: actions/upload-artifact@v1
      if: failure() && steps.build.outcome == 'success'
      with:
        name: artifacts
        path: ./out/artifacts
